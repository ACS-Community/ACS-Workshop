# Python stubs generated by omniidl from /home/almaproc/ostm/ICD/src/../idl/Scheduler.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")

# #include "acserr.idl"
import acserr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")

# #include "SYSTEMErr.idl"
import SYSTEMErr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_SYSTEMErr = omniORB.openModule("SYSTEMErr")
_0_SYSTEMErr__POA = omniORB.openModule("SYSTEMErr__POA")

#
# Start of module "SCHEDULER_MODULE"
#
__name__ = "SCHEDULER_MODULE"
_0_SCHEDULER_MODULE = omniORB.openModule("SCHEDULER_MODULE", r"/home/almaproc/ostm/ICD/src/../idl/Scheduler.idl")
_0_SCHEDULER_MODULE__POA = omniORB.openModule("SCHEDULER_MODULE__POA", r"/home/almaproc/ostm/ICD/src/../idl/Scheduler.idl")


# interface Scheduler
_0_SCHEDULER_MODULE._d_Scheduler = (omniORB.tcInternal.tv_objref, "IDL:acsws/SCHEDULER_MODULE/Scheduler:1.0", "Scheduler")
omniORB.typeMapping["IDL:acsws/SCHEDULER_MODULE/Scheduler:1.0"] = _0_SCHEDULER_MODULE._d_Scheduler
_0_SCHEDULER_MODULE.Scheduler = omniORB.newEmptyClass()
class Scheduler (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_SCHEDULER_MODULE._d_Scheduler[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SCHEDULER_MODULE.Scheduler = Scheduler
_0_SCHEDULER_MODULE._tc_Scheduler = omniORB.tcInternal.createTypeCode(_0_SCHEDULER_MODULE._d_Scheduler)
omniORB.registerType(Scheduler._NP_RepositoryId, _0_SCHEDULER_MODULE._d_Scheduler, _0_SCHEDULER_MODULE._tc_Scheduler)

# Scheduler operations and attributes
Scheduler._d_start = ((), (), {_0_SYSTEMErr.SchedulerAlreadyRunningEx._NP_RepositoryId: _0_SYSTEMErr._d_SchedulerAlreadyRunningEx})
Scheduler._d_stop = ((), (), {_0_SYSTEMErr.SchedulerAlreadyStoppedEx._NP_RepositoryId: _0_SYSTEMErr._d_SchedulerAlreadyStoppedEx})
Scheduler._d_proposalUnderExecution = ((), (omniORB.tcInternal.tv_long, ), {_0_SYSTEMErr.NoProposalExecutingEx._NP_RepositoryId: _0_SYSTEMErr._d_NoProposalExecutingEx})

# Scheduler object reference
class _objref_Scheduler (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = Scheduler._NP_RepositoryId

    def __init__(self, obj):
        _0_ACS._objref_ACSComponent.__init__(self, obj)

    def start(self, *args):
        return self._obj.invoke("start", _0_SCHEDULER_MODULE.Scheduler._d_start, args)

    def stop(self, *args):
        return self._obj.invoke("stop", _0_SCHEDULER_MODULE.Scheduler._d_stop, args)

    def proposalUnderExecution(self, *args):
        return self._obj.invoke("proposalUnderExecution", _0_SCHEDULER_MODULE.Scheduler._d_proposalUnderExecution, args)

omniORB.registerObjref(Scheduler._NP_RepositoryId, _objref_Scheduler)
_0_SCHEDULER_MODULE._objref_Scheduler = _objref_Scheduler
del Scheduler, _objref_Scheduler

# Scheduler skeleton
__name__ = "SCHEDULER_MODULE__POA"
class Scheduler (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_SCHEDULER_MODULE.Scheduler._NP_RepositoryId


    _omni_op_d = {"start": _0_SCHEDULER_MODULE.Scheduler._d_start, "stop": _0_SCHEDULER_MODULE.Scheduler._d_stop, "proposalUnderExecution": _0_SCHEDULER_MODULE.Scheduler._d_proposalUnderExecution}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

Scheduler._omni_skeleton = Scheduler
_0_SCHEDULER_MODULE__POA.Scheduler = Scheduler
omniORB.registerSkeleton(Scheduler._NP_RepositoryId, Scheduler)
del Scheduler
__name__ = "SCHEDULER_MODULE"

#
# End of module "SCHEDULER_MODULE"
#
__name__ = "Scheduler_idl"

_exported_modules = ( "SCHEDULER_MODULE", )

# The end.

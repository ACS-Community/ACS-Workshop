# Python stubs generated by omniidl from /home/almaproc/ostm/ICD/src/../idl/DataBase.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")

# #include "Types.idl"
import Types_idl
_0_TYPES = omniORB.openModule("TYPES")
_0_TYPES__POA = omniORB.openModule("TYPES__POA")

# #include "acserr.idl"
import acserr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")

# #include "SYSTEMErr.idl"
import SYSTEMErr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_SYSTEMErr = omniORB.openModule("SYSTEMErr")
_0_SYSTEMErr__POA = omniORB.openModule("SYSTEMErr__POA")

#
# Start of module "DATABASE_MODULE"
#
__name__ = "DATABASE_MODULE"
_0_DATABASE_MODULE = omniORB.openModule("DATABASE_MODULE", r"/home/almaproc/ostm/ICD/src/../idl/DataBase.idl")
_0_DATABASE_MODULE__POA = omniORB.openModule("DATABASE_MODULE__POA", r"/home/almaproc/ostm/ICD/src/../idl/DataBase.idl")


# interface DataBase
_0_DATABASE_MODULE._d_DataBase = (omniORB.tcInternal.tv_objref, "IDL:acsws/DATABASE_MODULE/DataBase:1.0", "DataBase")
omniORB.typeMapping["IDL:acsws/DATABASE_MODULE/DataBase:1.0"] = _0_DATABASE_MODULE._d_DataBase
_0_DATABASE_MODULE.DataBase = omniORB.newEmptyClass()
class DataBase (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_DATABASE_MODULE._d_DataBase[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    STATUS_INITIAL_PROPOSAL = 0
    STATUS_NO_SUCH_PROPOSAL = -999


_0_DATABASE_MODULE.DataBase = DataBase
_0_DATABASE_MODULE._tc_DataBase = omniORB.tcInternal.createTypeCode(_0_DATABASE_MODULE._d_DataBase)
omniORB.registerType(DataBase._NP_RepositoryId, _0_DATABASE_MODULE._d_DataBase, _0_DATABASE_MODULE._tc_DataBase)

# DataBase operations and attributes
DataBase._d_storeProposal = ((omniORB.typeMapping["IDL:acsws/TYPES/TargetList:1.0"], ), (omniORB.tcInternal.tv_long, ), None)
DataBase._d_getProposalStatus = ((omniORB.tcInternal.tv_long, ), (omniORB.tcInternal.tv_long, ), None)
DataBase._d_removeProposal = ((omniORB.tcInternal.tv_long, ), (), None)
DataBase._d_getProposalObservations = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:acsws/TYPES/ImageList:1.0"], ), {_0_SYSTEMErr.ProposalNotYetReadyEx._NP_RepositoryId: _0_SYSTEMErr._d_ProposalNotYetReadyEx})
DataBase._d_getProposals = ((), (omniORB.typeMapping["IDL:acsws/TYPES/ProposalList:1.0"], ), None)
DataBase._d_setProposalStatus = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SYSTEMErr.InvalidProposalStatusTransitionEx._NP_RepositoryId: _0_SYSTEMErr._d_InvalidProposalStatusTransitionEx})
DataBase._d_storeImage = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:acsws/TYPES/ImageType:1.0"]), (), {_0_SYSTEMErr.ImageAlreadyStoredEx._NP_RepositoryId: _0_SYSTEMErr._d_ImageAlreadyStoredEx})
DataBase._d_clean = ((), (), None)

# DataBase object reference
class _objref_DataBase (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = DataBase._NP_RepositoryId

    def __init__(self, obj):
        _0_ACS._objref_ACSComponent.__init__(self, obj)

    def storeProposal(self, *args):
        return self._obj.invoke("storeProposal", _0_DATABASE_MODULE.DataBase._d_storeProposal, args)

    def getProposalStatus(self, *args):
        return self._obj.invoke("getProposalStatus", _0_DATABASE_MODULE.DataBase._d_getProposalStatus, args)

    def removeProposal(self, *args):
        return self._obj.invoke("removeProposal", _0_DATABASE_MODULE.DataBase._d_removeProposal, args)

    def getProposalObservations(self, *args):
        return self._obj.invoke("getProposalObservations", _0_DATABASE_MODULE.DataBase._d_getProposalObservations, args)

    def getProposals(self, *args):
        return self._obj.invoke("getProposals", _0_DATABASE_MODULE.DataBase._d_getProposals, args)

    def setProposalStatus(self, *args):
        return self._obj.invoke("setProposalStatus", _0_DATABASE_MODULE.DataBase._d_setProposalStatus, args)

    def storeImage(self, *args):
        return self._obj.invoke("storeImage", _0_DATABASE_MODULE.DataBase._d_storeImage, args)

    def clean(self, *args):
        return self._obj.invoke("clean", _0_DATABASE_MODULE.DataBase._d_clean, args)

omniORB.registerObjref(DataBase._NP_RepositoryId, _objref_DataBase)
_0_DATABASE_MODULE._objref_DataBase = _objref_DataBase
del DataBase, _objref_DataBase

# DataBase skeleton
__name__ = "DATABASE_MODULE__POA"
class DataBase (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_DATABASE_MODULE.DataBase._NP_RepositoryId


    _omni_op_d = {"storeProposal": _0_DATABASE_MODULE.DataBase._d_storeProposal, "getProposalStatus": _0_DATABASE_MODULE.DataBase._d_getProposalStatus, "removeProposal": _0_DATABASE_MODULE.DataBase._d_removeProposal, "getProposalObservations": _0_DATABASE_MODULE.DataBase._d_getProposalObservations, "getProposals": _0_DATABASE_MODULE.DataBase._d_getProposals, "setProposalStatus": _0_DATABASE_MODULE.DataBase._d_setProposalStatus, "storeImage": _0_DATABASE_MODULE.DataBase._d_storeImage, "clean": _0_DATABASE_MODULE.DataBase._d_clean}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

DataBase._omni_skeleton = DataBase
_0_DATABASE_MODULE__POA.DataBase = DataBase
omniORB.registerSkeleton(DataBase._NP_RepositoryId, DataBase)
del DataBase
__name__ = "DATABASE_MODULE"

#
# End of module "DATABASE_MODULE"
#
__name__ = "DataBase_idl"

_exported_modules = ( "DATABASE_MODULE", )

# The end.

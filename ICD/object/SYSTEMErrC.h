// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL__TMP__SYSTEMERRC_H_
#define _TAO_IDL__TMP__SYSTEMERRC_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "acserrC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 3 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace ACSErr
{

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SYSTEMErr = 900907U;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module ACSErr

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace SYSTEMErr
{

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong AlreadyInAutomatic = 0U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong PositionOutOfLimits = 1U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ProposalNotYetReady = 2U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong InvalidProposalStatusTransition = 3U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ImageAlreadyStored = 4U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong CameraIsOff = 5U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SchedulerAlreadyRunning = 6U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SchedulerAlreadyStopped = 7U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NoProposalExecuting = 8U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SystemInAutoMode = 9U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong CannotOpenDevice = 10U;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  SYSTEMErrEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SYSTEMErrEx (void);
    SYSTEMErrEx (const SYSTEMErrEx &);
    ~SYSTEMErrEx (void);

    SYSTEMErrEx &operator= (const SYSTEMErrEx &);

    static void _tao_any_destructor (void *);

    static SYSTEMErrEx *_downcast ( ::CORBA::Exception *);
    static const SYSTEMErrEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    SYSTEMErrEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SYSTEMErrEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  AlreadyInAutomaticEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    AlreadyInAutomaticEx (void);
    AlreadyInAutomaticEx (const AlreadyInAutomaticEx &);
    ~AlreadyInAutomaticEx (void);

    AlreadyInAutomaticEx &operator= (const AlreadyInAutomaticEx &);

    static void _tao_any_destructor (void *);

    static AlreadyInAutomaticEx *_downcast ( ::CORBA::Exception *);
    static const AlreadyInAutomaticEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    AlreadyInAutomaticEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_AlreadyInAutomaticEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  PositionOutOfLimitsEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    PositionOutOfLimitsEx (void);
    PositionOutOfLimitsEx (const PositionOutOfLimitsEx &);
    ~PositionOutOfLimitsEx (void);

    PositionOutOfLimitsEx &operator= (const PositionOutOfLimitsEx &);

    static void _tao_any_destructor (void *);

    static PositionOutOfLimitsEx *_downcast ( ::CORBA::Exception *);
    static const PositionOutOfLimitsEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    PositionOutOfLimitsEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_PositionOutOfLimitsEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  ProposalNotYetReadyEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    ProposalNotYetReadyEx (void);
    ProposalNotYetReadyEx (const ProposalNotYetReadyEx &);
    ~ProposalNotYetReadyEx (void);

    ProposalNotYetReadyEx &operator= (const ProposalNotYetReadyEx &);

    static void _tao_any_destructor (void *);

    static ProposalNotYetReadyEx *_downcast ( ::CORBA::Exception *);
    static const ProposalNotYetReadyEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    ProposalNotYetReadyEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ProposalNotYetReadyEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  InvalidProposalStatusTransitionEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    InvalidProposalStatusTransitionEx (void);
    InvalidProposalStatusTransitionEx (const InvalidProposalStatusTransitionEx &);
    ~InvalidProposalStatusTransitionEx (void);

    InvalidProposalStatusTransitionEx &operator= (const InvalidProposalStatusTransitionEx &);

    static void _tao_any_destructor (void *);

    static InvalidProposalStatusTransitionEx *_downcast ( ::CORBA::Exception *);
    static const InvalidProposalStatusTransitionEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    InvalidProposalStatusTransitionEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InvalidProposalStatusTransitionEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  ImageAlreadyStoredEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    ImageAlreadyStoredEx (void);
    ImageAlreadyStoredEx (const ImageAlreadyStoredEx &);
    ~ImageAlreadyStoredEx (void);

    ImageAlreadyStoredEx &operator= (const ImageAlreadyStoredEx &);

    static void _tao_any_destructor (void *);

    static ImageAlreadyStoredEx *_downcast ( ::CORBA::Exception *);
    static const ImageAlreadyStoredEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    ImageAlreadyStoredEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ImageAlreadyStoredEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  CameraIsOffEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    CameraIsOffEx (void);
    CameraIsOffEx (const CameraIsOffEx &);
    ~CameraIsOffEx (void);

    CameraIsOffEx &operator= (const CameraIsOffEx &);

    static void _tao_any_destructor (void *);

    static CameraIsOffEx *_downcast ( ::CORBA::Exception *);
    static const CameraIsOffEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    CameraIsOffEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_CameraIsOffEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  SchedulerAlreadyRunningEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SchedulerAlreadyRunningEx (void);
    SchedulerAlreadyRunningEx (const SchedulerAlreadyRunningEx &);
    ~SchedulerAlreadyRunningEx (void);

    SchedulerAlreadyRunningEx &operator= (const SchedulerAlreadyRunningEx &);

    static void _tao_any_destructor (void *);

    static SchedulerAlreadyRunningEx *_downcast ( ::CORBA::Exception *);
    static const SchedulerAlreadyRunningEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    SchedulerAlreadyRunningEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SchedulerAlreadyRunningEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  SchedulerAlreadyStoppedEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SchedulerAlreadyStoppedEx (void);
    SchedulerAlreadyStoppedEx (const SchedulerAlreadyStoppedEx &);
    ~SchedulerAlreadyStoppedEx (void);

    SchedulerAlreadyStoppedEx &operator= (const SchedulerAlreadyStoppedEx &);

    static void _tao_any_destructor (void *);

    static SchedulerAlreadyStoppedEx *_downcast ( ::CORBA::Exception *);
    static const SchedulerAlreadyStoppedEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    SchedulerAlreadyStoppedEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SchedulerAlreadyStoppedEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  NoProposalExecutingEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    NoProposalExecutingEx (void);
    NoProposalExecutingEx (const NoProposalExecutingEx &);
    ~NoProposalExecutingEx (void);

    NoProposalExecutingEx &operator= (const NoProposalExecutingEx &);

    static void _tao_any_destructor (void *);

    static NoProposalExecutingEx *_downcast ( ::CORBA::Exception *);
    static const NoProposalExecutingEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    NoProposalExecutingEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_NoProposalExecutingEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  SystemInAutoModeEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SystemInAutoModeEx (void);
    SystemInAutoModeEx (const SystemInAutoModeEx &);
    ~SystemInAutoModeEx (void);

    SystemInAutoModeEx &operator= (const SystemInAutoModeEx &);

    static void _tao_any_destructor (void *);

    static SystemInAutoModeEx *_downcast ( ::CORBA::Exception *);
    static const SystemInAutoModeEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    SystemInAutoModeEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SystemInAutoModeEx;

  // TAO_IDL - Generated from
  // be/be_visitor_exception/exception_ch.cpp:44

  class  CannotOpenDeviceEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    CannotOpenDeviceEx (void);
    CannotOpenDeviceEx (const CannotOpenDeviceEx &);
    ~CannotOpenDeviceEx (void);

    CannotOpenDeviceEx &operator= (const CannotOpenDeviceEx &);

    static void _tao_any_destructor (void *);

    static CannotOpenDeviceEx *_downcast ( ::CORBA::Exception *);
    static const CannotOpenDeviceEx *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be/be_visitor_exception/exception_ctor.cpp:54

    CannotOpenDeviceEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_CannotOpenDeviceEx;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module SYSTEMErr

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::SYSTEMErrEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::SYSTEMErrEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::SYSTEMErrEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::SYSTEMErrEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SYSTEMErrEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SYSTEMErrEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::SYSTEMErrEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SYSTEMErrEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::AlreadyInAutomaticEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::AlreadyInAutomaticEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::AlreadyInAutomaticEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::AlreadyInAutomaticEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::AlreadyInAutomaticEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::AlreadyInAutomaticEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::AlreadyInAutomaticEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::AlreadyInAutomaticEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::PositionOutOfLimitsEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::PositionOutOfLimitsEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::PositionOutOfLimitsEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::PositionOutOfLimitsEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::PositionOutOfLimitsEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::PositionOutOfLimitsEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::PositionOutOfLimitsEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::PositionOutOfLimitsEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::ProposalNotYetReadyEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::ProposalNotYetReadyEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::ProposalNotYetReadyEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::ProposalNotYetReadyEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::ProposalNotYetReadyEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::ProposalNotYetReadyEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::ProposalNotYetReadyEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::ProposalNotYetReadyEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::InvalidProposalStatusTransitionEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::InvalidProposalStatusTransitionEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::InvalidProposalStatusTransitionEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::InvalidProposalStatusTransitionEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::InvalidProposalStatusTransitionEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::InvalidProposalStatusTransitionEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::InvalidProposalStatusTransitionEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::InvalidProposalStatusTransitionEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::ImageAlreadyStoredEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::ImageAlreadyStoredEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::ImageAlreadyStoredEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::ImageAlreadyStoredEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::ImageAlreadyStoredEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::ImageAlreadyStoredEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::ImageAlreadyStoredEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::ImageAlreadyStoredEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::CameraIsOffEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::CameraIsOffEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::CameraIsOffEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::CameraIsOffEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::CameraIsOffEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::CameraIsOffEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::CameraIsOffEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::CameraIsOffEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::SchedulerAlreadyRunningEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::SchedulerAlreadyRunningEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::SchedulerAlreadyRunningEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::SchedulerAlreadyRunningEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyRunningEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SchedulerAlreadyRunningEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::SchedulerAlreadyRunningEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyRunningEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::SchedulerAlreadyStoppedEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::SchedulerAlreadyStoppedEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::SchedulerAlreadyStoppedEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::SchedulerAlreadyStoppedEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyStoppedEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SchedulerAlreadyStoppedEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::SchedulerAlreadyStoppedEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyStoppedEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::NoProposalExecutingEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::NoProposalExecutingEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::NoProposalExecutingEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::NoProposalExecutingEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::NoProposalExecutingEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::NoProposalExecutingEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::NoProposalExecutingEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::NoProposalExecutingEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::SystemInAutoModeEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::SystemInAutoModeEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::SystemInAutoModeEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::SystemInAutoModeEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SystemInAutoModeEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SystemInAutoModeEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::SystemInAutoModeEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SystemInAutoModeEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:41

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SYSTEMErr
{
  

   void operator<<= (::CORBA::Any &, const ::SYSTEMErr::CannotOpenDeviceEx &); // copying version
   void operator<<= (::CORBA::Any &, ::SYSTEMErr::CannotOpenDeviceEx*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::SYSTEMErr::CannotOpenDeviceEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::SYSTEMErr::CannotOpenDeviceEx *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const SYSTEMErr::CannotOpenDeviceEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::CannotOpenDeviceEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SYSTEMErr::CannotOpenDeviceEx *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::CannotOpenDeviceEx *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SYSTEMErrEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SYSTEMErrEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::AlreadyInAutomaticEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::AlreadyInAutomaticEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::PositionOutOfLimitsEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::PositionOutOfLimitsEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::ProposalNotYetReadyEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::ProposalNotYetReadyEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::InvalidProposalStatusTransitionEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::InvalidProposalStatusTransitionEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::ImageAlreadyStoredEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::ImageAlreadyStoredEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::CameraIsOffEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::CameraIsOffEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SchedulerAlreadyRunningEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SchedulerAlreadyRunningEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SchedulerAlreadyStoppedEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SchedulerAlreadyStoppedEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::NoProposalExecutingEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::NoProposalExecutingEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SystemInAutoModeEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SystemInAutoModeEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::CannotOpenDeviceEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::CannotOpenDeviceEx &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "SYSTEMErrC.inl"
#endif /* defined INLINE */

#endif /* ifndef */


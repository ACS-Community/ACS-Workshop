# Python stubs generated by omniidl from /home/almadev9/instrument_cpp/src/../idl/instrument.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")

#
# Start of module "instrumentNS"
#
__name__ = "instrumentNS"
_0_instrumentNS = omniORB.openModule("instrumentNS", r"/home/almadev9/instrument_cpp/src/../idl/instrument.idl")
_0_instrumentNS__POA = omniORB.openModule("instrumentNS__POA", r"/home/almadev9/instrument_cpp/src/../idl/instrument.idl")


# interface instrument
_0_instrumentNS._d_instrument = (omniORB.tcInternal.tv_objref, "IDL:alma/instrumentNS/instrument:1.0", "instrument")
omniORB.typeMapping["IDL:alma/instrumentNS/instrument:1.0"] = _0_instrumentNS._d_instrument
_0_instrumentNS.instrument = omniORB.newEmptyClass()
class instrument (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_instrumentNS._d_instrument[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_instrumentNS.instrument = instrument
_0_instrumentNS._tc_instrument = omniORB.tcInternal.createTypeCode(_0_instrumentNS._d_instrument)
omniORB.registerType(instrument._NP_RepositoryId, _0_instrumentNS._d_instrument, _0_instrumentNS._tc_instrument)

# instrument operations and attributes
instrument._d_sayHello = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# instrument object reference
class _objref_instrument (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = instrument._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def sayHello(self, *args):
        return _omnipy.invoke(self, "sayHello", _0_instrumentNS.instrument._d_sayHello, args)

    __methods__ = ["sayHello"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(instrument._NP_RepositoryId, _objref_instrument)
_0_instrumentNS._objref_instrument = _objref_instrument
del instrument, _objref_instrument

# instrument skeleton
__name__ = "instrumentNS__POA"
class instrument (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_instrumentNS.instrument._NP_RepositoryId


    _omni_op_d = {"sayHello": _0_instrumentNS.instrument._d_sayHello}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

instrument._omni_skeleton = instrument
_0_instrumentNS__POA.instrument = instrument
omniORB.registerSkeleton(instrument._NP_RepositoryId, instrument)
del instrument
__name__ = "instrumentNS"

#
# End of module "instrumentNS"
#
__name__ = "instrument_idl"

_exported_modules = ( "instrumentNS", )

# The end.
